#version 330 core
in vec2 frag_uv;
in vec3 normal;
in vec3 position;

uniform vec3 light_pos;
uniform vec3 light_color;
uniform float light_strength;

uniform mat4 model;
uniform sampler2D sampler;
	
out vec3 color;

void main()
{
    vec3 norm = normalize(mat3(model) * normal);   
	vec3 dir = normalize(light_pos - position);
	
	float d = max(dot(norm, dir), 0.0);

	vec3 final_diff = d * light_color;
	
	//0.2 is ambient
	color = (0.2 + (final_diff * light_strength)) * texture(sampler, frag_uv).rgb;
}